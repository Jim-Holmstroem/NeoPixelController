# Setting up serial
not really sure but it works if I run this first

```bash
stty -F /dev/ttyACM0 cs8 115200 ignbrk -brkint -icrnl -imaxbel -opost -onlcr -isig -icanon -iexten -echo -echoe -echok -echoctl -echoke noflsh -ixon -crtscts
```
then
```bash
stty -F /dev/ttyUSB0 115200 cs8 cread clocal
```

I will try to pin down what is happening.

## The stty settings
```bash
ws% stty -a < /dev/ttyACM0
speed 115200 baud; rows 0; columns 0; line = 0;
intr = ^C; quit = ^\; erase = ^?; kill = ^H; eof = ^D; eol = <undef>; eol2 = <undef>;
swtch = <undef>; start = ^Q; stop = ^S; susp = ^Z; rprnt = ^R; werase = ^W; lnext = ^V;
discard = ^O; min = 100; time = 2;
-parenb -parodd -cmspar cs8 -hupcl -cstopb cread clocal -crtscts
-ignbrk brkint ignpar -parmrk -inpck -istrip -inlcr -igncr -icrnl ixon -ixoff -iuclc -ixany -imaxbel
-iutf8
-opost -olcuc -ocrnl -onlcr -onocr -onlret -ofill -ofdel nl0 cr0 tab0 bs0 vt0 ff0
-isig -icanon iexten -echo echoe echok -echonl -noflsh -xcase -tostop -echoprt echoctl echoke
-flusho -extproc
```


# Example
echo -n "@[@{0,255,0,0},@{1,0,255,0}]\n" > /dev/ttyACM0

for some reason (probably flushing) it works if you ``cat /dev/ttyACM0`` when pushing data to ``python example.py > /dev/ttyACM0``


A couple of pixels gets weird if you go above 10 complete refreshes a second (10 fps)
